# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

catalog = ['Стол', 5, True, 43.5]

for element in catalog:
    print(type(element))

# 2. Для списка реализовать обмен значений соседних элементов,
# т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().


my_list = list(input('Введите числа: '))

print(f'Исходные значения: {my_list}')


j = 0
for i in range(int(len(my_list) / 2)):
    my_list[j], my_list[j + 1] = my_list[j + 1], my_list[j]     # меняем 0 и 1 на 1 и 0
    j += 2

print(f'Новые значения:    {my_list}')

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.

# dict

months_dict = {
     1:    'Январь',
     2:    'Февраль',
     3:    'Март',
     4:    'Апрель',
     5:    'Май',
     6:    'Июнь',
     7:    'Июль',
     8:    'Август',
     9:    'Сентябрь',
     10:   'Октябрь',
     11:   'Ноябрь',
     12:   'Декабрь'
}

# list

mouths_list = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль',
               'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']

# type
type_dict = type(months_dict)
type_list = type(mouths_list)

while True:

    i = int(input('Введите месяц в виде числа от 1 до 12: '))

# зима
    if i <= 2 or i == 12:

        print(f'Выбранный месяц - {months_dict[i]},относится к времени года зима ({type_dict})')
        print(f'Выбранный месяц - {mouths_list[i - 1]},относится к времени года зима ({type_list})')
        break
# весна
    elif 5 >= i >= 3:
        print(f'Выбранный месяц - {months_dict[i]},относится к времени года весна ({type_dict})')
        print(f'Выбранный месяц - {mouths_list[i - 1]},относится к времени года весна ({type_list})')
        break
# лето
    elif 8 >= i >= 6:
        print(f'Выбранный месяц - {months_dict[i]},относится к времени года лето ({type_dict})')
        print(f'Выбранный месяц - {mouths_list[i - 1]},относится к времени года лето ({type_list})')
        break
# осень
    elif 11 >= i >= 9:
        print(f'Выбранный месяц - {months_dict[i]},относится к времени года осень ({type_dict})')
        print(f'Выбранный месяц - {mouths_list[i - 1]},относится к времени года осень ({type_list})')
        break
    else:
        print('Введите правильно число')



# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.

string = input('Введите несколько слов, разделённых пробелами: ')

words = string.split()
words_len = len(words)

for i in range(words_len):

    if len(words[i]) >= 10:
        print(i+1, words[i][:10])
    else:
        print(i+1, words[i])

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

my_list = [7, 5, 3, 3, 2]
print(f'Набор натуральных чисел: {my_list} \nДля выхода из цила введите число 777')
print('')
num = int(input('Введите натуральное число: '))
while num != 777:
    for i in range(int(len(my_list))):
        # ==
        if num == my_list[i]:
            my_list.insert(my_list.index(num), num)
            break
        # max
        elif num > my_list[0]:
            my_list.insert(0, num)
            break
        # min
        elif num < my_list[-1]:
            my_list.append(num)
            break
        # other
        elif my_list[i] > num > my_list[i + 1]:
            my_list.insert(i + 1, num)
            break

    print(f'Пользователь ввёл число {num}. Результат: {my_list}')
    num = int(input('Введите натуральное число: '))


# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах.
# Реализовать словарь, в котором каждый ключ — характеристика товара, например название,
# а значение — список значений-характеристик, например список названий товаров.
# Пример:
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }


goods = int(input('Введите количество товаров: '))
n = 1
my_list = []
# пустые списки для аналитики
my_name = []
my_quantity = []
my_price = []
my_unit = []

while n <= goods:
    my_dict = dict({'название': input(f'Введите название {n}-го товара: '),
                    'цена': input(f'Введите цену {n}-го товара: '),
                    'количество': input(f'Введите количество {n}-го товара: '),
                    'eд': input(f'Введите единицу измерения {n}-го товара: ')
                    })

    my_list.append((n, my_dict))
    n += 1

    print('Структура данных «Товары»: ')
    my_tuple = tuple(my_list)
    for tuples in my_tuple:
        print(tuples)

    print('')
    print('Аналитика о товарах: ')

    my_name.append(my_dict.get('название'))
    my_price.append(my_dict.get('цена'))
    my_quantity.append(my_dict.get('количество'))
    my_unit.append(my_dict.get('eд'))

    new_dict = {
        "название:": my_name,
        "цена:": my_price,
        "количество:": my_quantity,
        "eд:":   my_unit
    }
    for key, val in new_dict.items():
        print(key, val)
